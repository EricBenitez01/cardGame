[
  {
    "id": 1,
    "titulo": "Variables",
    "title": "Variables",
    "definicion_espanol": "Espacios de memoria utilizados para almacenar valores. Se declaran con las palabras clave 'var', 'let' o 'const', y pueden contener diferentes tipos de datos. Las variables permiten la manipulación y reutilización de información en un programa.",
    "definicion_ingles": "Memory spaces used to store values. They are declared with the keywords 'var', 'let', or 'const', and can hold various data types. Variables allow for the manipulation and reuse of information within a program."
  },
  {
    "id": 2,
    "titulo": "Funciones",
    "title": "Functions",
    "definicion_espanol": "Bloques de código reutilizable que realizan una tarea específica. Las funciones permiten encapsular la lógica y facilitan el mantenimiento del código. Pueden aceptar parámetros y devolver valores. Las funciones son fundamentales para la modularidad en JavaScript.",
    "definicion_ingles": "Reusable blocks of code that perform a specific task. Functions allow for encapsulating logic and ease code maintenance. They can accept parameters and return values. Functions are fundamental for modularity in JavaScript."
  },
  {
    "id": 3,
    "titulo": "Arreglos",
    "title": "Arrays",
    "definicion_espanol": "Estructuras de datos que almacenan colecciones de elementos. Los arreglos permiten acceder a sus elementos mediante índices y ofrecen numerosos métodos para manipular su contenido. Son fundamentales para trabajar con conjuntos de datos en JavaScript.",
    "definicion_ingles": "Data structures that store collections of elements. Arrays allow accessing elements by their indices and provide numerous methods to manipulate their content. They are fundamental for working with datasets in JavaScript."
  },
  {
    "id": 4,
    "titulo": "Objetos",
    "title": "Objects",
    "definicion_espanol": "Estructuras de datos que representan entidades con propiedades y comportamientos. Los objetos contienen pares clave-valor, donde las claves son las propiedades y los valores son sus valores asociados. Son esenciales para modelar datos complejos en JavaScript.",
    "definicion_ingles": "Data structures that represent entities with properties and behaviors. Objects contain key-value pairs, where the keys are the properties and the values are their associated values. They are essential for modeling complex data in JavaScript."
  },
  {
    "id": 5,
    "titulo": "Condicionales",
    "title": "Conditionals",
    "definicion_espanol": "Estructuras de control que permiten tomar decisiones en función de condiciones. Los condicionales, como 'if', 'else if' y 'switch', ejecutan diferentes bloques de código según se cumplan o no ciertas condiciones. Son cruciales para la lógica de programación.",
    "definicion_ingles": "Control structures that allow making decisions based on conditions. Conditionals, like 'if', 'else if', and 'switch', execute different code blocks depending on whether certain conditions are met or not. They are crucial for programming logic."
  },
  {
    "id": 6,
    "titulo": "Bucles",
    "title": "Loops",
    "definicion_espanol": "Estructuras de control que permiten ejecutar un bloque de código repetidamente mientras se cumpla una condición. Los bucles, como 'for', 'while' y 'do-while', facilitan la automatización de tareas y el procesamiento de conjuntos de datos.",
    "definicion_ingles": "Control structures that allow executing a code block repeatedly as long as a condition is met. Loops, like 'for', 'while', and 'do-while', facilitate task automation and processing of datasets."
  },
  {
    "id": 7,
    "titulo": "Funciones Flecha",
    "title": "Arrow Functions",
    "definicion_espanol": "Una forma más concisa de definir funciones anónimas en JavaScript. Las funciones flecha se escriben utilizando la sintaxis '() => {}' y permiten una vinculación automática del valor 'this'. Son útiles para funciones de una sola línea o como funciones de devolución de llamada.",
    "definicion_ingles": "A more concise way to define anonymous functions in JavaScript. Arrow functions are written using the syntax '() => {}' and allow automatic binding of the 'this' value. They are useful for single-line functions or as callback functions."
  },
  {
    "id": 8,
    "titulo": "Promesas",
    "title": "Promises",
    "definicion_espanol": "Objetos que representan el resultado eventual (éxito o fracaso) de una operación asíncrona. Las promesas ofrecen una forma más estructurada de manejar tareas asíncronas en comparación con los callbacks. Son ampliamente utilizadas en operaciones como solicitudes HTTP.",
    "definicion_ingles": "Objects that represent the eventual outcome (success or failure) of an asynchronous operation. Promises provide a more structured way to handle asynchronous tasks compared to callbacks. They are widely used in operations such as HTTP requests."
  },
  {
    "id": 9,
    "titulo": "Clases",
    "title": "Classes",
    "definicion_espanol": "Mecanismo de programación orientada a objetos (POO) en JavaScript. Las clases permiten crear objetos basados en un modelo y definir propiedades y métodos comunes. Son una forma más clara y reutilizable de crear objetos y estructurar la lógica del programa.",
    "definicion_ingles": "Object-oriented programming (OOP) mechanism in JavaScript. Classes allow creating objects based on a blueprint and define common properties and methods. They provide a clearer and more reusable way to create objects and structure the program's logic."
  },
  {
    "id": 10,
    "titulo": "Módulos",
    "title": "Modules",
    "definicion_espanol": "Unidades independientes de código que pueden exportar e importar funcionalidades entre archivos. Los módulos permiten dividir un programa en partes más pequeñas y organizadas. Son fundamentales para mantener la modularidad y la reutilización en proyectos grandes.",
    "definicion_ingles": "Independent units of code that can export and import functionalities between files. Modules allow dividing a program into smaller and organized parts. They are fundamental for maintaining modularity and reusability in large projects."
  }
]


  
  
  